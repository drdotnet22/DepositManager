@page "/checks/new"

@using DepositManager.Data
@using Microsoft.EntityFrameworkCore

@inject CheckServices checkService
@inject NavigationManager NavigationManager

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <h4>New Check</h4>
        <div class="row">
            <div class="col-xs-3 col-sm-2 col-lg-2 col-md-2">
                <SfNumericTextBox Placeholder="Reference Number" Format="###" FloatLabelType="@FloatLabelType.Auto" @onfocusout="IsReferenceNumSet" @bind-Value="newCheck.ReferenceNum" ShowSpinButton="false"></SfNumericTextBox>
            </div>
            <div class="col-xs-2 col-sm-2 col-lg-2 col-md-2">
                <SfNumericTextBox Placeholder="Amount" Format="$ ###.##" FloatLabelType="@FloatLabelType.Auto" @bind-Value="newCheck.Amount" ShowSpinButton="false"></SfNumericTextBox>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-4 col-sm-4 col-lg-4 col-md-4">
                <SfTextBox Placeholder="Company" FloatLabelType="@FloatLabelType.Auto" @bind-Value="newCheck.CustomerName"></SfTextBox>
            </div>
        </div>
        <div class="row">
            <div>
                <SfButton IsPrimary="true" @onclick="AddNewCheck">Save</SfButton>
                <SfButton @onclick="CancelAddCheck">Cancel</SfButton>
            </div>
        </div>
    </div>
</div>

<style>
    .content-wrapper {
        width: 90%;
        margin: 0 auto;
        min-width: 85px;
    }
    b.example-label {
        font-size: 14px;
    }
    .content-wrapper div.row {
        padding: 15px 0px;
    }
    .small-textbox {
        padding-top: 5px;
    }
    .tailwind .small-textbox,
    .tailwind-dark .small-textbox {
        padding-top: 3px;
    }
    .e-bigger .small-textbox {
        padding-top: 10px;
    }
    .tailwind .e-bigger .small-textbox,
    .tailwind-dark .e-bigger .small-textbox {
        padding-top: 1px;
    }
    @@media only screen and (max-width: 480px) {
        .content-wrapper {
            width: 92%;
        }
        .col-xs-6,
        .col-xs-4,
        .col-xs-12 {
            padding: 10px 5px;
            width: 100%;
        }
        .content-wrapper div.row {
            padding: 0px;
        }
    }
    .fabric .row.material,
    .bootstrap .row.material,
    .bootstrap4 .row.material,
    .bootstrap5 .row.material,
    .highcontrast .row.material,
    .tailwind .row.material,
    .fluent .row.material,
    .fabric-dark .row.material,
    .bootstrap-dark .row.material,
    .bootstrap5-dark .row.material,
    .tailwind-dark .row.material,
    .fluent-dark .row.material {
        display: none;
    }

</style>

@code {
    public Check newCheck { get; set; } = new Check();
    private bool referenceNumSet = false;

    private async Task AddNewCheck()
    {
        if (referenceNumSet)
        {
            await checkService.AddCheckAsync(newCheck);
            NavigationManager.NavigateTo($"/");
        }
    }

    private async Task CancelAddCheck()
    {
        NavigationManager.NavigateTo($"/");
    }

    private async Task IsReferenceNumSet()
    {
        referenceNumSet = true;
    }
}
